import numpy as np
from bokeh.plotting import figure, curdoc
from bokeh.models.widgets import Slider
from bokeh.layouts import row, widgetbox

# Set up data
t_in = np.array([0, 1])
f_in = np.array([2, 3])
diff_in = np.array([0, 0])

# cubic polynomial
polyDeg = 3;

A = np.zeros([polyDeg + 1, polyDeg + 1])
for i in range(0, 3, 1):
    A[[0, 1], i] = np.power(t_in, i)

A[2, :] = np.array([3 * np.square(t_in[0]), 2 * t_in[0], 1, 0])
A[3, :] = np.array([3 * np.square(t_in[1]), 2 * t_in[1], 1, 0])

cubicParams = np.dot(np.inv(A), np.append(f_in, diff_in))

t = np.arange(0, 1, 0.01)
y = np.polyval(cubicParams, t)

# Create the main plot
def create_figure():
    # Set up Plot
    plot = figure(plot_width=400, plot_height=400)
    plot.line(t, y, line_width=1, color="blue")
    plot.circle(tin, fin, size=8, fill_color="white")

    # Set up widgets


# Update the plot
def update(att, old, new):
    layout.children[1] = create_figure()

# Controls
f1_slider = Slider(start=1, end=4, value=2, step=0.01, title="f(0)")
f2_slider = Slider(start=1, end=4, value=3, step=0.01, title="f(1)")
inputs = widgetbox(f1_slider, f2_slider)
layout = row(inputs, create_figure())

curdoc().add_root(layout)
curdoc().title = "Polynomial Fit"


